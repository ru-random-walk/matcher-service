# Default values for bureaucracy-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

env:
  - name: SPRING_PROFILES_ACTIVE
    value: test
  - name: TZ
    value: Etc/UTC
  - name: KAFKA_BOOTSTRAP_SERVER
    value: kafka-cluster.kafka.svc.cluster.local:9092

secrets:
  - name: MATCHER_DB_USERNAME
    secret_key: MATCHER_DB_USERNAME
    secret_name: matcher-secret

  - name: MATCHER_DB_PASSWORD
    secret_key: MATCHER_DB_PASSWORD
    secret_name: matcher-secret

  - name: AUTH_SERVICE_URL
    secret_key: AUTH_SERVICE_URL
    secret_name: matcher-secret

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false

resources:
  limits:
    cpu: 750m
    memory: 512Mi
  requests:
    cpu: 1m
    memory: 128Mi

livenessProbe:
  httpGet:
    path: /actuator/health
    port: 8080
  initialDelaySeconds: 45
  periodSeconds: 20
  failureThreshold: 5
  successThreshold: 1
  timeoutSeconds: 5
readinessProbe:
  httpGet:
    path: /actuator/health
    port: 8080
  initialDelaySeconds: 30
  periodSeconds: 20
  failureThreshold: 5
  successThreshold: 1
  timeoutSeconds: 5

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
